testArchive[file=FreeBSD_hpbin.cpio](org.apache.commons.compress.ArchiveReadTest)
testArchive[file=SunOS_-c.cpio](org.apache.commons.compress.ArchiveReadTest)
testArchive[file=SunOS_cEf.tar](org.apache.commons.compress.ArchiveReadTest)
testArchive[file=FreeBSD.ar](org.apache.commons.compress.ArchiveReadTest)
testArchive[file=SunOS_crc.cpio](org.apache.commons.compress.ArchiveReadTest)
testArchive[file=SunOS_cAEf.tar](org.apache.commons.compress.ArchiveReadTest)
testArchive[file=SunOS.zip](org.apache.commons.compress.ArchiveReadTest)
testArchive[file=FreeBSD.zip](org.apache.commons.compress.ArchiveReadTest)
testArchive[file=SunOS_odc.cpio](org.apache.commons.compress.ArchiveReadTest)
testArchive[file=FreeBSD_bin.cpio](org.apache.commons.compress.ArchiveReadTest)
testArchive[file=FreeBSD_ustar.tar](org.apache.commons.compress.ArchiveReadTest)
testArchive[file=SunOS_.cpio](org.apache.commons.compress.ArchiveReadTest)
testArchive[file=SunOS_cf.tar](org.apache.commons.compress.ArchiveReadTest)
testArchive[file=FreeBSD_.tar](org.apache.commons.compress.ArchiveReadTest)
testArchive[file=FreeBSD_newc.cpio](org.apache.commons.compress.ArchiveReadTest)
testArchive[file=FreeBSD_pax.tar](org.apache.commons.compress.ArchiveReadTest)
testArchive[file=FreeBSD_crc.cpio](org.apache.commons.compress.ArchiveReadTest)
testArchive[file=SunOS.ar](org.apache.commons.compress.ArchiveReadTest)
testToAsciiBytes(org.apache.commons.compress.ArchiveUtilsTest)
testToAsciiStringThrowsStringIndexOutOfBoundsException(org.apache.commons.compress.ArchiveUtilsTest)
testToStringWithNonNull(org.apache.commons.compress.ArchiveUtilsTest)
testCompareBA(org.apache.commons.compress.ArchiveUtilsTest)
testAsciiConversions(org.apache.commons.compress.ArchiveUtilsTest)
testIsEqualWithNullWithPositive(org.apache.commons.compress.ArchiveUtilsTest)
sanitizeLeavesShortStringsAlone(org.apache.commons.compress.ArchiveUtilsTest)
sanitizeShortensString(org.apache.commons.compress.ArchiveUtilsTest)
testCompareAscii(org.apache.commons.compress.ArchiveUtilsTest)
sanitizeRemovesUnprintableCharacters(org.apache.commons.compress.ArchiveUtilsTest)
testIsEqual(org.apache.commons.compress.ArchiveUtilsTest)
testTarGzip(org.apache.commons.compress.ChainingTestCase)
testTarBzip2(org.apache.commons.compress.ChainingTestCase)
testDetection(org.apache.commons.compress.DetectArchiverTestCase)
testEmptyJarArchive(org.apache.commons.compress.DetectArchiverTestCase)
testEmptyZipArchive(org.apache.commons.compress.DetectArchiverTestCase)
testDetectionNotArchive(org.apache.commons.compress.DetectArchiverTestCase)
testCOMPRESS117(org.apache.commons.compress.DetectArchiverTestCase)
testCOMPRESS335(org.apache.commons.compress.DetectArchiverTestCase)
testEmptyCpioArchive(org.apache.commons.compress.DetectArchiverTestCase)
testWriteJar(org.apache.commons.compress.IOMethodsTest)
testWriteTar(org.apache.commons.compress.IOMethodsTest)
testWriteZip(org.apache.commons.compress.IOMethodsTest)
testWriteCpio(org.apache.commons.compress.IOMethodsTest)
testReadCpio(org.apache.commons.compress.IOMethodsTest)
testReadJar(org.apache.commons.compress.IOMethodsTest)
testReadTar(org.apache.commons.compress.IOMethodsTest)
testReadZip(org.apache.commons.compress.IOMethodsTest)
testWriteAr(org.apache.commons.compress.IOMethodsTest)
testReadAr(org.apache.commons.compress.IOMethodsTest)
testArDelete(org.apache.commons.compress.archivers.ArTestCase)
testArUnarchive(org.apache.commons.compress.archivers.ArTestCase)
testFileEntryFromFile(org.apache.commons.compress.archivers.ArTestCase)
testArArchiveCreation(org.apache.commons.compress.archivers.ArTestCase)
testExplicitFileEntry(org.apache.commons.compress.archivers.ArTestCase)
testCallSequenceAr(org.apache.commons.compress.archivers.ArchiveOutputStreamTest)
testCallSequenceCpio(org.apache.commons.compress.archivers.ArchiveOutputStreamTest)
testFinish(org.apache.commons.compress.archivers.ArchiveOutputStreamTest)
testOptionalFinish(org.apache.commons.compress.archivers.ArchiveOutputStreamTest)
testCallSequenceJar(org.apache.commons.compress.archivers.ArchiveOutputStreamTest)
testCallSequenceTar(org.apache.commons.compress.archivers.ArchiveOutputStreamTest)
testCallSequenceZip(org.apache.commons.compress.archivers.ArchiveOutputStreamTest)
cantRead7zFromStream(org.apache.commons.compress.archivers.ArchiveStreamFactoryTest)
skipsPK00Prefix(org.apache.commons.compress.archivers.ArchiveStreamFactoryTest)
cantWrite7zToStream(org.apache.commons.compress.archivers.ArchiveStreamFactoryTest)
testEncodingInputStream(org.apache.commons.compress.archivers.ArchiveStreamFactoryTest)
testEncodingInputStreamAutodetect(org.apache.commons.compress.archivers.ArchiveStreamFactoryTest)
aiffFilesAreNoTARs(org.apache.commons.compress.archivers.ArchiveStreamFactoryTest)
testEncodingCtor(org.apache.commons.compress.archivers.ArchiveStreamFactoryTest)
shortTextFilesAreNoTARs(org.apache.commons.compress.archivers.ArchiveStreamFactoryTest)
detectsAndThrowsFor7z(org.apache.commons.compress.archivers.ArchiveStreamFactoryTest)
testCOMPRESS209(org.apache.commons.compress.archivers.ArchiveStreamFactoryTest)
testDetect(org.apache.commons.compress.archivers.ArchiveStreamFactoryTest)
testEncodingDeprecated(org.apache.commons.compress.archivers.ArchiveStreamFactoryTest)
testEncodingOutputStream(org.apache.commons.compress.archivers.ArchiveStreamFactoryTest)
testCpioUnarchive(org.apache.commons.compress.archivers.CpioTestCase)
testFileEntryFromFile(org.apache.commons.compress.archivers.CpioTestCase)
testDirectoryEntryFromFile(org.apache.commons.compress.archivers.CpioTestCase)
testExplicitDirectoryEntry(org.apache.commons.compress.archivers.CpioTestCase)
testExplicitFileEntry(org.apache.commons.compress.archivers.CpioTestCase)
testCpioArchiveCreation(org.apache.commons.compress.archivers.CpioTestCase)
testArchiveDetection(org.apache.commons.compress.archivers.DumpTestCase)
testCompressedDumpUnarchiveAll(org.apache.commons.compress.archivers.DumpTestCase)
testDumpUnarchiveAll(org.apache.commons.compress.archivers.DumpTestCase)
testCheckArchive(org.apache.commons.compress.archivers.DumpTestCase)
testCheckCompressedArchive(org.apache.commons.compress.archivers.DumpTestCase)
testCompressedArchiveDetection(org.apache.commons.compress.archivers.DumpTestCase)
testMessageWhenArchiverNameIsNull_1(org.apache.commons.compress.archivers.ExceptionMessageTest)
testMessageWhenArchiverNameIsNull_2(org.apache.commons.compress.archivers.ExceptionMessageTest)
testMessageWhenOutputStreamIsNull(org.apache.commons.compress.archivers.ExceptionMessageTest)
testMessageWhenInputStreamIsNull(org.apache.commons.compress.archivers.ExceptionMessageTest)
testJarUnarchive(org.apache.commons.compress.archivers.JarTestCase)
testJarArchiveCreation(org.apache.commons.compress.archivers.JarTestCase)
testJarUnarchiveAll(org.apache.commons.compress.archivers.JarTestCase)
testArchive[file=minotaur_posix.tar](org.apache.commons.compress.archivers.LongPathTest)
testArchive[file=cygwin_pax.tar](org.apache.commons.compress.archivers.LongPathTest)
testArchive[file=minotaur.jar](org.apache.commons.compress.archivers.LongPathTest)
testArchive[file=minotaur-M.jar](org.apache.commons.compress.archivers.LongPathTest)
testArchive[file=cygwin_oldgnu.tar](org.apache.commons.compress.archivers.LongPathTest)
testArchive[file=minotaur_ustar.tar](org.apache.commons.compress.archivers.LongPathTest)
testArchive[file=minotaur.cpio](org.apache.commons.compress.archivers.LongPathTest)
testArchive[file=minotaur.ar](org.apache.commons.compress.archivers.LongPathTest)
testArchive[file=vmgump_ustar.tar](org.apache.commons.compress.archivers.LongPathTest)
testArchive[file=cygwin_posix.tar](org.apache.commons.compress.archivers.LongPathTest)
testArchive[file=minotaur_pax.tar](org.apache.commons.compress.archivers.LongPathTest)
testArchive[file=vmgump_gnu.tar](org.apache.commons.compress.archivers.LongPathTest)
testArchive[file=minotaur.zip](org.apache.commons.compress.archivers.LongPathTest)
testArchive[file=vmgump_posix.tar](org.apache.commons.compress.archivers.LongPathTest)
testArchive[file=cygwin_ustar.tar](org.apache.commons.compress.archivers.LongPathTest)
testArchive[file=vmgump_pax.tar](org.apache.commons.compress.archivers.LongPathTest)
testArchive[file=cygwin_gnu.tar](org.apache.commons.compress.archivers.LongPathTest)
testArchive[file=minotaur-c.zip](org.apache.commons.compress.archivers.LongPathTest)
testArchive[file=vmgump_oldgnu.tar](org.apache.commons.compress.archivers.LongPathTest)
testArchive[file=minotaur-0.jar](org.apache.commons.compress.archivers.LongPathTest)
testArchive[file=hudson-E.tar](org.apache.commons.compress.archivers.LongPathTest)
testArchive[file=winXP_antgnu.tar](org.apache.commons.compress.archivers.LongPathTest)
testArchive[file=minotaur-z.zip](org.apache.commons.compress.archivers.LongPathTest)
testArchive[file=hudson.tar](org.apache.commons.compress.archivers.LongPathTest)
testArchive[file=gnu.tar](org.apache.commons.compress.archivers.LongSymLinkTest)
testSevenZArchiveCreationUsingCopy(org.apache.commons.compress.archivers.SevenZTestCase)
testSevenZArchiveCreationUsingLZMA(org.apache.commons.compress.archivers.SevenZTestCase)
testSevenZArchiveCreationUsingBZIP2(org.apache.commons.compress.archivers.SevenZTestCase)
testSevenZArchiveCreationUsingLZMA2(org.apache.commons.compress.archivers.SevenZTestCase)
testSevenZArchiveCreationUsingDeflate(org.apache.commons.compress.archivers.SevenZTestCase)
testTarUnarchive(org.apache.commons.compress.archivers.TarTestCase)
testFileEntryFromFile(org.apache.commons.compress.archivers.TarTestCase)
testDirectoryEntryFromFile(org.apache.commons.compress.archivers.TarTestCase)
testTarArchiveLongNameCreation(org.apache.commons.compress.archivers.TarTestCase)
testTarArchiveCreation(org.apache.commons.compress.archivers.TarTestCase)
testExplicitDirectoryEntry(org.apache.commons.compress.archivers.TarTestCase)
testCOMPRESS114(org.apache.commons.compress.archivers.TarTestCase)
testCOMPRESS178(org.apache.commons.compress.archivers.TarTestCase)
testExplicitFileEntry(org.apache.commons.compress.archivers.TarTestCase)
testUnixModeInAddRaw(org.apache.commons.compress.archivers.ZipTestCase)
testSkipsPK00Prefix(org.apache.commons.compress.archivers.ZipTestCase)
testZipUnarchive(org.apache.commons.compress.archivers.ZipTestCase)
testFileEntryFromFile(org.apache.commons.compress.archivers.ZipTestCase)
testDirectoryEntryFromFile(org.apache.commons.compress.archivers.ZipTestCase)
testCopyRawEntriesFromFile(org.apache.commons.compress.archivers.ZipTestCase)
testZipArchiveCreationInMemory(org.apache.commons.compress.archivers.ZipTestCase)
testCopyRawZip64EntryFromFile(org.apache.commons.compress.archivers.ZipTestCase)
testSkipEntryWithUnsupportedCompressionMethod(org.apache.commons.compress.archivers.ZipTestCase)
testExplicitDirectoryEntry(org.apache.commons.compress.archivers.ZipTestCase)
testSupportedCompressionMethod(org.apache.commons.compress.archivers.ZipTestCase)
testListAllFilesWithNestedArchive(org.apache.commons.compress.archivers.ZipTestCase)
testExplicitFileEntry(org.apache.commons.compress.archivers.ZipTestCase)
testZipArchiveCreation(org.apache.commons.compress.archivers.ZipTestCase)
testReadLongNamesBSD(org.apache.commons.compress.archivers.ar.ArArchiveInputStreamTest)
testReadLongNamesGNU(org.apache.commons.compress.archivers.ar.ArArchiveInputStreamTest)
testLongFileNamesCauseExceptionByDefault(org.apache.commons.compress.archivers.ar.ArArchiveOutputStreamTest)
testLongFileNamesWorkUsingBSDDialect(org.apache.commons.compress.archivers.ar.ArArchiveOutputStreamTest)
testReadingOfAttributesUnixVersion(org.apache.commons.compress.archivers.arj.ArjArchiveInputStreamTest)
testArjUnarchive(org.apache.commons.compress.archivers.arj.ArjArchiveInputStreamTest)
testReadingOfAttributesDosVersion(org.apache.commons.compress.archivers.arj.ArjArchiveInputStreamTest)
testCpioUnarchive(org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest)
testCpioUnarchiveCreatedByRedlineRpm(org.apache.commons.compress.archivers.cpio.CpioArchiveInputStreamTest)
testWriteOldBinary(org.apache.commons.compress.archivers.cpio.CpioArchiveOutputStreamTest)
testNotADumpArchive(org.apache.commons.compress.archivers.dump.DumpArchiveInputStreamTest)
testConsumesArchiveCompletely(org.apache.commons.compress.archivers.dump.DumpArchiveInputStreamTest)
testNotADumpArchiveButBigEnough(org.apache.commons.compress.archivers.dump.DumpArchiveInputStreamTest)
testSignatureCheck(org.apache.commons.compress.archivers.sevenz.SevenZFileTest)
test7zUnarchive(org.apache.commons.compress.archivers.sevenz.SevenZFileTest)
test7zDeflate64Unarchive(org.apache.commons.compress.archivers.sevenz.SevenZFileTest)
testHelloWorldHeaderCompressionOffLZMA2(org.apache.commons.compress.archivers.sevenz.SevenZFileTest)
getEntriesOfUnarchiveTest(org.apache.commons.compress.archivers.sevenz.SevenZFileTest)
testCompressedHeaderWithNonDefaultDictionarySize(org.apache.commons.compress.archivers.sevenz.SevenZFileTest)
testAllEmptyFilesArchive(org.apache.commons.compress.archivers.sevenz.SevenZFileTest)
test7zDecryptUnarchive(org.apache.commons.compress.archivers.sevenz.SevenZFileTest)
testRandomlySkippingEntries(org.apache.commons.compress.archivers.sevenz.SevenZFileTest)
testEncryptedArchiveRequiresPassword(org.apache.commons.compress.archivers.sevenz.SevenZFileTest)
getEntriesOfUnarchiveInMemoryTest(org.apache.commons.compress.archivers.sevenz.SevenZFileTest)
test7zDeflateUnarchive(org.apache.commons.compress.archivers.sevenz.SevenZFileTest)
testReadingBackDeltaDistance(org.apache.commons.compress.archivers.sevenz.SevenZFileTest)
testHelloWorldHeaderCompressionOffCopy(org.apache.commons.compress.archivers.sevenz.SevenZFileTest)
readEntriesOfSize0(org.apache.commons.compress.archivers.sevenz.SevenZFileTest)
testReadingBackLZMA2DictSize(org.apache.commons.compress.archivers.sevenz.SevenZFileTest)
testEndDeflaterOnCloseStream(org.apache.commons.compress.archivers.sevenz.SevenZNativeHeapTest)
testEndInflaterOnCloseStream(org.apache.commons.compress.archivers.sevenz.SevenZNativeHeapTest)
testLzma2WithIntConfiguration(org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest)
testLzmaWithIntConfiguration(org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest)
testLzma2Roundtrip(org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest)
testSevenEmptyFiles(org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest)
testBCJX86Roundtrip(org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest)
testBCJARMThumbRoundtrip(org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest)
testLzma2WithOptionsConfiguration(org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest)
testStackOfContentCompressions(org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest)
testEightFilesSomeNotEmpty(org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest)
testSixEmptyFiles(org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest)
testBCJPPCRoundtrip(org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest)
testDeltaRoundtrip(org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest)
testEightEmptyFiles(org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest)
testNineEmptyFiles(org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest)
testSixFilesSomeNotEmpty(org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest)
testBzip2WithConfiguration(org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest)
testLzmaWithOptionsConfiguration(org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest)
testCantFinishTwice(org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest)
testBCJARMRoundtrip(org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest)
testTwentyNineEmptyFiles(org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest)
testNineFilesSomeNotEmpty(org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest)
testCopyRoundtrip(org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest)
testBCJSparcRoundtrip(org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest)
testArchiveWithMixedMethods(org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest)
testDeflateWithConfiguration(org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest)
testDirectoriesOnly(org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest)
testDeflateRoundtrip(org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest)
testTwentyNineFilesSomeNotEmpty(org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest)
testStackOfContentCompressionsInMemory(org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest)
testDirectoriesAndEmptyFiles(org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest)
testBzip2Roundtrip(org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest)
testBCJIA64Roundtrip(org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest)
testSevenFilesSomeNotEmpty(org.apache.commons.compress.archivers.sevenz.SevenZOutputFileTest)
testWriteLongDirectoryNameGnuMode(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)
testPaxHeadersWithLength99(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)
testWriteSimplePaxHeaders(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)
testWriteLongDirectoryNamePosixMode(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)
testWriteLongLinkNameGnuMode(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)
testWriteLongLinkNameTruncateMode(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)
testWriteLongDirectoryNameTruncateMode(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)
testWriteLongLinkNamePosixMode(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)
testWriteNonAsciiNameWithUnfortunateNamePosixMode(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)
testCount(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)
testWriteLongFileNamePosixMode(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)
testBigNumberStarMode(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)
testMaxFileSizeError(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)
testOldEntryStarMode(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)
testRecordSize(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)
testLongNameMd5Hash(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)
testRoundtripWith67CharFileNameGnu(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)
testBlockSizes(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)
testWriteNonAsciiDirectoryNamePosixMode(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)
testBigNumberPosixMode(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)
testOldEntryPosixMode(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)
testOldEntryError(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)
testWriteLongDirectoryNameErrorMode(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)
testRoundtripWith67CharFileNamePosix(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)
testWriteLongLinkNameErrorMode(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)
testPutGlobalPaxHeaderEntry(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)
testWriteNonAsciiPathNamePaxHeader(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)
testWriteNonAsciiLinkPathNamePaxHeader(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)
testPaxHeadersWithLength101(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)
testReadPasswordEncryptedEntryViaStream(org.apache.commons.compress.archivers.zip.EncryptedArchiveTest)
testReadPasswordEncryptedEntryViaZipFile(org.apache.commons.compress.archivers.zip.EncryptedArchiveTest)
testArchiveWithImplodeCompression4K2Trees(org.apache.commons.compress.archivers.zip.ExplodeSupportTest)
testConstructorThrowsExceptions(org.apache.commons.compress.archivers.zip.ExplodeSupportTest)
testZipStreamWithImplodeCompression8K3Trees(org.apache.commons.compress.archivers.zip.ExplodeSupportTest)
testTikaTestArchive(org.apache.commons.compress.archivers.zip.ExplodeSupportTest)
testArchiveWithImplodeCompression8K3Trees(org.apache.commons.compress.archivers.zip.ExplodeSupportTest)
testZipStreamWithImplodeCompression4K2Trees(org.apache.commons.compress.archivers.zip.ExplodeSupportTest)
testTikaTestStream(org.apache.commons.compress.archivers.zip.ExplodeSupportTest)
testRead7ZipMultiVolumeArchiveForStream(org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest)
testRead7ZipMultiVolumeArchiveForFile(org.apache.commons.compress.archivers.zip.Maven221MultiVolumeTest)
testZipFileReadsUnicodeFields(org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest)
testCP437FileRoundtripImplicitUnicodeExtra(org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest)
testUtf8FileRoundtripImplicitUnicodeExtra(org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest)
testRead7ZipArchiveForStream(org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest)
testCP437FileRoundtripExplicitUnicodeExtra(org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest)
testRead7ZipArchive(org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest)
testUtf8FileRoundtripExplicitUnicodeExtra(org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest)
testASCIIFileRoundtripImplicitUnicodeExtra(org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest)
testReadWinZipArchiveForStream(org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest)
testUtf8FileRoundtripNoEFSImplicitUnicodeExtra(org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest)
testZipArchiveInputStreamReadsUnicodeFields(org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest)
testASCIIFileRoundtripExplicitUnicodeExtra(org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest)
testReadWinZipArchive(org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest)
testUtf8FileRoundtripNoEFSExplicitUnicodeExtra(org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest)
testUtf8Interoperability(org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest)
testRawNameReadFromZipFile(org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest)
testRawNameReadFromStream(org.apache.commons.compress.archivers.zip.UTF8ZipFilesTest)
readDeflate64CompressedStreamWithDataDescriptor(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)
testOffsets(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)
nameSourceDefaultsToName(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)
shouldConsumeArchiveCompletely(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)
readDeflate64CompressedStream(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)
testReadingOfFirstStoredEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)
nameSourceIsSetToEFS(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)
nameSourceIsSetToUnicodeExtraField(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)
testUnshrinkEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)
properUseOfInflater(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)
testMessageWithCorruptFileName(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)
properlyMarksEntriesAsUnreadableIfUncompressedSizeIsUnknown(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)
winzipBackSlashWorkaround(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)
testUnzipBZip2CompressedEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)
testWithBytesAfterData(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)
shouldReadNestedZip(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)
testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)
testDeleteFile2(org.apache.commons.compress.changes.ChangeSetTestCase)
testAddDeleteToOneFileArchive(org.apache.commons.compress.changes.ChangeSetTestCase)
testDeleteFromAndAddToZipUsingZipFilePerform(org.apache.commons.compress.changes.ChangeSetTestCase)
testAddToEmptyArchive(org.apache.commons.compress.changes.ChangeSetTestCase)
testRenameAndDelete(org.apache.commons.compress.changes.ChangeSetTestCase)
testDeleteAddToOneFileArchive(org.apache.commons.compress.changes.ChangeSetTestCase)
testAddAllreadyExistingWithReplaceFalse(org.apache.commons.compress.changes.ChangeSetTestCase)
testChangeSetResults(org.apache.commons.compress.changes.ChangeSetTestCase)
testDeleteFromAndAddToAr(org.apache.commons.compress.changes.ChangeSetTestCase)
testAddMoveDelete(org.apache.commons.compress.changes.ChangeSetTestCase)
testDeleteFromAr(org.apache.commons.compress.changes.ChangeSetTestCase)
testDeleteAddDelete(org.apache.commons.compress.changes.ChangeSetTestCase)
testDeleteDir(org.apache.commons.compress.changes.ChangeSetTestCase)
testAddDeleteAdd(org.apache.commons.compress.changes.ChangeSetTestCase)
testAddChangeTwiceWithoutReplace(org.apache.commons.compress.changes.ChangeSetTestCase)
testDeletePlusAddSame(org.apache.commons.compress.changes.ChangeSetTestCase)
testDeleteDir2(org.apache.commons.compress.changes.ChangeSetTestCase)
testDeleteDir3(org.apache.commons.compress.changes.ChangeSetTestCase)
testDeleteFile(org.apache.commons.compress.changes.ChangeSetTestCase)
testAddAllreadyExistingWithReplaceTrue(org.apache.commons.compress.changes.ChangeSetTestCase)
testDeleteFromJar(org.apache.commons.compress.changes.ChangeSetTestCase)
testDeleteFromTar(org.apache.commons.compress.changes.ChangeSetTestCase)
testDeleteFromZip(org.apache.commons.compress.changes.ChangeSetTestCase)
testDeletePlusAdd(org.apache.commons.compress.changes.ChangeSetTestCase)
testDeleteFromAndAddToJar(org.apache.commons.compress.changes.ChangeSetTestCase)
testDeleteFromAndAddToTar(org.apache.commons.compress.changes.ChangeSetTestCase)
testDeleteFromAndAddToZip(org.apache.commons.compress.changes.ChangeSetTestCase)
testAddChangeTwice(org.apache.commons.compress.changes.ChangeSetTestCase)
testBzip2Unarchive(org.apache.commons.compress.compressors.BZip2TestCase)
testBzipCreation(org.apache.commons.compress.compressors.BZip2TestCase)
testConcatenatedStreamsReadFirstOnly(org.apache.commons.compress.compressors.BZip2TestCase)
testConcatenatedStreamsReadFully(org.apache.commons.compress.compressors.BZip2TestCase)
testCOMPRESS131(org.apache.commons.compress.compressors.BZip2TestCase)
testRawDeflateUnarchive(org.apache.commons.compress.compressors.DeflateTestCase)
testRawDeflateCreation(org.apache.commons.compress.compressors.DeflateTestCase)
testDeflateUnarchive(org.apache.commons.compress.compressors.DeflateTestCase)
testDeflateCreation(org.apache.commons.compress.compressors.DeflateTestCase)
testDefaultExtractionViaFactoryAutodetection(org.apache.commons.compress.compressors.FramedSnappyTestCase)
testDefaultExtraction(org.apache.commons.compress.compressors.FramedSnappyTestCase)
testDefaultExtractionViaFactory(org.apache.commons.compress.compressors.FramedSnappyTestCase)
testRoundtrip(org.apache.commons.compress.compressors.FramedSnappyTestCase)
testRoundtripWithOneBigWrite(org.apache.commons.compress.compressors.FramedSnappyTestCase)
testInteroperabilityWithGzipCompressorInputStream(org.apache.commons.compress.compressors.GZipTestCase)
testInteroperabilityWithGZIPInputStream(org.apache.commons.compress.compressors.GZipTestCase)
testMetadataRoundTrip(org.apache.commons.compress.compressors.GZipTestCase)
testGzipUnarchive(org.apache.commons.compress.compressors.GZipTestCase)
testGzipCreation(org.apache.commons.compress.compressors.GZipTestCase)
testOverWrite(org.apache.commons.compress.compressors.GZipTestCase)
testInvalidCompressionLevel(org.apache.commons.compress.compressors.GZipTestCase)
testExtraFlagsFastestCompression(org.apache.commons.compress.compressors.GZipTestCase)
testConcatenatedStreamsReadFirstOnly(org.apache.commons.compress.compressors.GZipTestCase)
testConcatenatedStreamsReadFully(org.apache.commons.compress.compressors.GZipTestCase)
testCorruptedInput(org.apache.commons.compress.compressors.GZipTestCase)
testExtraFlagsDefaultCompression(org.apache.commons.compress.compressors.GZipTestCase)
testExtraFlagsBestCompression(org.apache.commons.compress.compressors.GZipTestCase)
testLZMAUnarchiveWithAutodetection(org.apache.commons.compress.compressors.LZMATestCase)
lzmaRoundtrip(org.apache.commons.compress.compressors.LZMATestCase)
testLZMAUnarchive(org.apache.commons.compress.compressors.LZMATestCase)
testInputStreamMethods(org.apache.commons.compress.compressors.Pack200TestCase)
testJarArchiveCreationTempFile(org.apache.commons.compress.compressors.Pack200TestCase)
testJarUnarchiveAllInMemory(org.apache.commons.compress.compressors.Pack200TestCase)
testJarArchiveCreationInMemory(org.apache.commons.compress.compressors.Pack200TestCase)
testJarUnarchiveAllFileArgInMemory(org.apache.commons.compress.compressors.Pack200TestCase)
testBadSignature(org.apache.commons.compress.compressors.Pack200TestCase)
testJarUnarchiveAllFileTempFile(org.apache.commons.compress.compressors.Pack200TestCase)
testOutputStreamMethods(org.apache.commons.compress.compressors.Pack200TestCase)
testShortSignature(org.apache.commons.compress.compressors.Pack200TestCase)
testGoodSignature(org.apache.commons.compress.compressors.Pack200TestCase)
testJarUnarchiveAllTempFile(org.apache.commons.compress.compressors.Pack200TestCase)
testXZCreation(org.apache.commons.compress.compressors.XZTestCase)
testConcatenatedStreamsReadFirstOnly(org.apache.commons.compress.compressors.XZTestCase)
testConcatenatedStreamsReadFully(org.apache.commons.compress.compressors.XZTestCase)
testXZUnarchive(org.apache.commons.compress.compressors.XZTestCase)
testZUnarchiveViaFactory(org.apache.commons.compress.compressors.ZTestCase)
testZUnarchive(org.apache.commons.compress.compressors.ZTestCase)
testZUnarchiveViaAutoDetection(org.apache.commons.compress.compressors.ZTestCase)
testMatches(org.apache.commons.compress.compressors.ZTestCase)
testTurningOnCachingReEvaluatesAvailability(org.apache.commons.compress.compressors.brotli.BrotliCompressorInputStreamTest)
testBrotliUnarchive(org.apache.commons.compress.compressors.brotli.BrotliCompressorInputStreamTest)
testBrotliDecode(org.apache.commons.compress.compressors.brotli.BrotliCompressorInputStreamTest)
testCanTurnOffCaching(org.apache.commons.compress.compressors.brotli.BrotliCompressorInputStreamTest)
singleByteReadWorksAsExpected(org.apache.commons.compress.compressors.brotli.BrotliCompressorInputStreamTest)
availableShouldReturnZero(org.apache.commons.compress.compressors.brotli.BrotliCompressorInputStreamTest)
singleByteReadReturnsMinusOneAtEof(org.apache.commons.compress.compressors.brotli.BrotliCompressorInputStreamTest)
testCachingIsEnabledByDefaultAndBrotliIsPresent(org.apache.commons.compress.compressors.brotli.BrotliCompressorInputStreamTest)
shouldBeAbleToSkipAByte(org.apache.commons.compress.compressors.brotli.BrotliCompressorInputStreamTest)
readBlaLz4(org.apache.commons.compress.compressors.lz4.BlockLZ4CompressorInputStreamTest)
biggerFileRoundtrip[using default](org.apache.commons.compress.compressors.lz4.BlockLZ4CompressorRoundtripTest)
gzippedLoremIpsumRoundtrip[using default](org.apache.commons.compress.compressors.lz4.BlockLZ4CompressorRoundtripTest)
blaTarRoundtrip[using default](org.apache.commons.compress.compressors.lz4.BlockLZ4CompressorRoundtripTest)
biggerFileRoundtrip[using tuned for speed](org.apache.commons.compress.compressors.lz4.BlockLZ4CompressorRoundtripTest)
gzippedLoremIpsumRoundtrip[using tuned for speed](org.apache.commons.compress.compressors.lz4.BlockLZ4CompressorRoundtripTest)
blaTarRoundtrip[using tuned for speed](org.apache.commons.compress.compressors.lz4.BlockLZ4CompressorRoundtripTest)
biggerFileRoundtrip[using tuned for compression ratio](org.apache.commons.compress.compressors.lz4.BlockLZ4CompressorRoundtripTest)
gzippedLoremIpsumRoundtrip[using tuned for compression ratio](org.apache.commons.compress.compressors.lz4.BlockLZ4CompressorRoundtripTest)
blaTarRoundtrip[using tuned for compression ratio](org.apache.commons.compress.compressors.lz4.BlockLZ4CompressorRoundtripTest)
blockRoundtripViaFactory(org.apache.commons.compress.compressors.lz4.FactoryTest)
frameRoundtripViaFactory(org.apache.commons.compress.compressors.lz4.FactoryTest)
rejectsNonLZ4Stream(org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorInputStreamTest)
readBlaDumpLz4(org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorInputStreamTest)
readBlaLz4WithDecompressConcatenated(org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorInputStreamTest)
readDoubledBlaLz4ViaFactoryWithDecompressConcatenatedFalse(org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorInputStreamTest)
skipsOverTrailingSkippableFrames(org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorInputStreamTest)
rejectsTrailingBytesAfterValidFrame(org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorInputStreamTest)
rejectsStreamsWithoutContentChecksum(org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorInputStreamTest)
rejectsBlocksWithoutChecksum(org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorInputStreamTest)
readsUncompressedBlocksUsingSingleByteRead(org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorInputStreamTest)
readDoubledBlaLz4ViaFactoryWithoutExplicitDecompressConcatenated(org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorInputStreamTest)
rejectsStreamsWithBadContentChecksum(org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorInputStreamTest)
readDoubledBlaLz4WithoutExplicitDecompressConcatenated(org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorInputStreamTest)
skipsOverSkippableFrames(org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorInputStreamTest)
rejectsFileWithWrongVersion(org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorInputStreamTest)
readDoubledBlaLz4WithDecompressConcatenatedFalse(org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorInputStreamTest)
readBlaLz4(org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorInputStreamTest)
rejectsSkippableFrameWithBadSignaturePrefix(org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorInputStreamTest)
rejectsFileWithoutHeaderChecksum(org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorInputStreamTest)
rejectsFileWithInsufficientContentSize(org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorInputStreamTest)
rejectsSkippableFrameFollowedByJunk(org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorInputStreamTest)
rejectsSkippableFrameWithBadSignatureTrailer(org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorInputStreamTest)
readBlaLz4ViaFactory(org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorInputStreamTest)
readsUncompressedBlocks(org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorInputStreamTest)
readDoubledBlaLz4WithDecompressConcatenatedTrue(org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorInputStreamTest)
testMatches(org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorInputStreamTest)
rejectsSkippableFrameWithPrematureEndInLengthBytes(org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorInputStreamTest)
readDoubledBlaLz4ViaFactoryWithDecompressConcatenatedTrue(org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorInputStreamTest)
rejectsFileWithoutBlockSizeByte(org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorInputStreamTest)
rejectsSkippableFrameFollowedByTooFewBytes(org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorInputStreamTest)
rejectsSkippableFrameWithPrematureEnd(org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorInputStreamTest)
readBlaLz4ViaFactoryWithDecompressConcatenated(org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorInputStreamTest)
rejectsFileWithoutFrameDescriptor(org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorInputStreamTest)
readBlaLz4ViaFactoryAutoDetection(org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorInputStreamTest)
rejectsFileWithBadHeaderChecksum(org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorInputStreamTest)
biggerFileRoundtrip[using LZ4 Parameters with BlockSize K64, withContentChecksum true, withBlockChecksum false, withBlockDependency false](org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorRoundtripTest)
gzippedLoremIpsumRoundtrip[using LZ4 Parameters with BlockSize K64, withContentChecksum true, withBlockChecksum false, withBlockDependency false](org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorRoundtripTest)
blaTarRoundtrip[using LZ4 Parameters with BlockSize K64, withContentChecksum true, withBlockChecksum false, withBlockDependency false](org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorRoundtripTest)
biggerFileRoundtrip[using LZ4 Parameters with BlockSize K256, withContentChecksum true, withBlockChecksum false, withBlockDependency false](org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorRoundtripTest)
gzippedLoremIpsumRoundtrip[using LZ4 Parameters with BlockSize K256, withContentChecksum true, withBlockChecksum false, withBlockDependency false](org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorRoundtripTest)
blaTarRoundtrip[using LZ4 Parameters with BlockSize K256, withContentChecksum true, withBlockChecksum false, withBlockDependency false](org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorRoundtripTest)
biggerFileRoundtrip[using LZ4 Parameters with BlockSize M1, withContentChecksum true, withBlockChecksum false, withBlockDependency false](org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorRoundtripTest)
gzippedLoremIpsumRoundtrip[using LZ4 Parameters with BlockSize M1, withContentChecksum true, withBlockChecksum false, withBlockDependency false](org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorRoundtripTest)
blaTarRoundtrip[using LZ4 Parameters with BlockSize M1, withContentChecksum true, withBlockChecksum false, withBlockDependency false](org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorRoundtripTest)
biggerFileRoundtrip[using LZ4 Parameters with BlockSize M4, withContentChecksum true, withBlockChecksum false, withBlockDependency false](org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorRoundtripTest)
gzippedLoremIpsumRoundtrip[using LZ4 Parameters with BlockSize M4, withContentChecksum true, withBlockChecksum false, withBlockDependency false](org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorRoundtripTest)
blaTarRoundtrip[using LZ4 Parameters with BlockSize M4, withContentChecksum true, withBlockChecksum false, withBlockDependency false](org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorRoundtripTest)
biggerFileRoundtrip[using LZ4 Parameters with BlockSize M4, withContentChecksum false, withBlockChecksum false, withBlockDependency false](org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorRoundtripTest)
gzippedLoremIpsumRoundtrip[using LZ4 Parameters with BlockSize M4, withContentChecksum false, withBlockChecksum false, withBlockDependency false](org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorRoundtripTest)
blaTarRoundtrip[using LZ4 Parameters with BlockSize M4, withContentChecksum false, withBlockChecksum false, withBlockDependency false](org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorRoundtripTest)
biggerFileRoundtrip[using LZ4 Parameters with BlockSize M4, withContentChecksum true, withBlockChecksum true, withBlockDependency false](org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorRoundtripTest)
gzippedLoremIpsumRoundtrip[using LZ4 Parameters with BlockSize M4, withContentChecksum true, withBlockChecksum true, withBlockDependency false](org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorRoundtripTest)
blaTarRoundtrip[using LZ4 Parameters with BlockSize M4, withContentChecksum true, withBlockChecksum true, withBlockDependency false](org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorRoundtripTest)
biggerFileRoundtrip[using LZ4 Parameters with BlockSize K64, withContentChecksum true, withBlockChecksum false, withBlockDependency true](org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorRoundtripTest)
gzippedLoremIpsumRoundtrip[using LZ4 Parameters with BlockSize K64, withContentChecksum true, withBlockChecksum false, withBlockDependency true](org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorRoundtripTest)
blaTarRoundtrip[using LZ4 Parameters with BlockSize K64, withContentChecksum true, withBlockChecksum false, withBlockDependency true](org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorRoundtripTest)
biggerFileRoundtrip[using LZ4 Parameters with BlockSize M4, withContentChecksum true, withBlockChecksum false, withBlockDependency false](org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorRoundtripTest)
gzippedLoremIpsumRoundtrip[using LZ4 Parameters with BlockSize M4, withContentChecksum true, withBlockChecksum false, withBlockDependency false](org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorRoundtripTest)
blaTarRoundtrip[using LZ4 Parameters with BlockSize M4, withContentChecksum true, withBlockChecksum false, withBlockDependency false](org.apache.commons.compress.compressors.lz4.FramedLZ4CompressorRoundtripTest)
testNormalizeInPlace(org.apache.commons.compress.compressors.pack200.Pack200UtilsTest)
testNormalize(org.apache.commons.compress.compressors.pack200.Pack200UtilsTest)
testRemainingChunkTypes(org.apache.commons.compress.compressors.snappy.FramedSnappyCompressorInputStreamTest)
testUnskippableChunk(org.apache.commons.compress.compressors.snappy.FramedSnappyCompressorInputStreamTest)
testAvailable(org.apache.commons.compress.compressors.snappy.FramedSnappyCompressorInputStreamTest)
testLoremIpsum(org.apache.commons.compress.compressors.snappy.FramedSnappyCompressorInputStreamTest)
testMatches(org.apache.commons.compress.compressors.snappy.FramedSnappyCompressorInputStreamTest)
readIWAFile(org.apache.commons.compress.compressors.snappy.FramedSnappyCompressorInputStreamTest)
readIWAFileWithBiggerOffset(org.apache.commons.compress.compressors.snappy.FramedSnappyCompressorInputStreamTest)
testChecksumUnmasking(org.apache.commons.compress.compressors.snappy.FramedSnappyCompressorInputStreamTest)
biggerFileRoundtrip(org.apache.commons.compress.compressors.snappy.SnappyRoundtripTest)
blaTarRoundtripTunedForCompressionRatio(org.apache.commons.compress.compressors.snappy.SnappyRoundtripTest)
tryReallyLongLiterals(org.apache.commons.compress.compressors.snappy.SnappyRoundtripTest)
tryReallyBigOffset(org.apache.commons.compress.compressors.snappy.SnappyRoundtripTest)
gzippedLoremIpsumRoundtrip(org.apache.commons.compress.compressors.snappy.SnappyRoundtripTest)
blaTarRoundtrip(org.apache.commons.compress.compressors.snappy.SnappyRoundtripTest)
blaTarRoundtripTunedForSpeed(org.apache.commons.compress.compressors.snappy.SnappyRoundtripTest)
testTurningOnCachingReEvaluatesAvailability(org.apache.commons.compress.compressors.zstandard.ZstdCompressorInputStreamTest)
testCanTurnOffCaching(org.apache.commons.compress.compressors.zstandard.ZstdCompressorInputStreamTest)
singleByteReadWorksAsExpected(org.apache.commons.compress.compressors.zstandard.ZstdCompressorInputStreamTest)
singleByteReadReturnsMinusOneAtEof(org.apache.commons.compress.compressors.zstandard.ZstdCompressorInputStreamTest)
testZstdDecode(org.apache.commons.compress.compressors.zstandard.ZstdCompressorInputStreamTest)
testCachingIsEnabledByDefaultAndZstdUtilsPresent(org.apache.commons.compress.compressors.zstandard.ZstdCompressorInputStreamTest)
shouldBeAbleToSkipAByte(org.apache.commons.compress.compressors.zstandard.ZstdCompressorInputStreamTest)
testZstandardUnarchive(org.apache.commons.compress.compressors.zstandard.ZstdCompressorInputStreamTest)
directRoundtrip(org.apache.commons.compress.compressors.zstandard.ZstdRoundtripTest)
factoryRoundtrip(org.apache.commons.compress.compressors.zstandard.ZstdRoundtripTest)
